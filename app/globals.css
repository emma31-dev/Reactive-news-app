/* Force auto-toggle button color and background to override global !important */
.auto-toggle-btn {
  background: #D1D5DB !important; /* neutral-300 */
  color: #1F2937 !important;     /* neutral-800 */
  border: 1px solid #D1D5DB;
}
.auto-toggle-btn.is-active {
  background: #4338CA !important; /* indigo-700 */
  color: #fff !important;
  border: 1.5px solid #4338CA;
  box-shadow: 0 0 0 2px rgba(99,102,241,0.55), 0 2px 6px -1px rgba(0,0,0,0.35);
}
@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

/* Font classes */
body {
  font-family: var(--font-outfit), system-ui, sans-serif;
}

h1, h2, h3, h4, h5, h6, .font-heading {
  font-family: var(--font-inter), system-ui, sans-serif;
}

/* -------------------------------------------------- */
/* Global Typography Scale & Button System            */
/* -------------------------------------------------- */
/* Fallback global heading styling without @apply (keeps portability if Tailwind CLI not active in this context) */
h1 { font-size: 1.875rem; line-height: 2.25rem; font-weight:700; letter-spacing:-0.01em; }
@media (min-width:768px){ h1 { font-size:1.875rem; } }
h2 { font-size:1.5rem; line-height:2rem; font-weight:600; letter-spacing:-0.01em; }
h3 { font-size:1.25rem; line-height:1.75rem; font-weight:600; }

/* Button system (utility-equivalent styles expressed directly) */
.btn { display:inline-flex; align-items:center; justify-content:center; gap:0.5rem; font-weight:500; border-radius:0.375rem; padding:0.5rem 1rem; font-size:0.875rem; line-height:1.25rem; transition:background-color .15s, color .15s, border-color .15s; position:relative; }
.btn:focus { outline:2px solid transparent; outline-offset:2px; }
.btn:focus-visible { box-shadow:0 0 0 2px var(--background), 0 0 0 4px var(--accent); }
.btn:disabled { opacity:.5; cursor:not-allowed; }

.btn-primary { background:#4f46e5; color:#fff; }
.btn-primary:hover { background:#6366f1; }
.btn-primary:active { background:#4338ca; }
.dark .btn-primary { background:#6366f1; }
.dark .btn-primary:hover { background:#818cf8; }
.dark .btn-primary:active { background:#4f46e5; }

.btn-outline { background:transparent; border:1px solid #d1d5db; color:#374151; }
.btn-outline:hover { background:#f3f4f6; }
.dark .btn-outline { border-color:#30363d; color:#d1d5db; }
.dark .btn-outline:hover { background:#1f242b; }

.btn-ghost { background:transparent; color:#374151; }
.btn-ghost:hover { background:#f3f4f6; }
.dark .btn-ghost { color:#d1d5db; }
.dark .btn-ghost:hover { background:#1f242b; }

.btn-danger { background:#dc2626; color:#fff; }
.btn-danger:hover { background:#ef4444; }
.btn-danger:active { background:#b91c1c; }
.btn-sm { padding:0.375rem 0.75rem; font-size:0.75rem; line-height:1rem; border-radius:0.25rem; }
.btn-lg { padding:0.75rem 1.5rem; font-size:1rem; line-height:1.5rem; border-radius:0.5rem; }

/* Page transition (fade) */
.page-transition-enter {
  opacity: 0;
  transform: translateY(4px);
}
.page-transition-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 0.25s ease, transform 0.25s ease;
}
.page-transition-exit {
  opacity: 1;
}
.page-transition-exit-active {
  opacity: 0;
  transform: translateY(-4px);
  transition: opacity 0.25s ease, transform 0.25s ease;
}

/* Progressive enhancement: prefer-reduced-motion disables transitions */
@media (prefers-reduced-motion: reduce) {
  .page-transition-enter,
  .page-transition-enter-active,
  .page-transition-exit,
  .page-transition-exit-active { transition: none !important; transform: none !important; }
}

/* Light theme (default) */
/* Consistent blue and accent light blue */
:root {
  --background: #ffffff;
  --foreground: #000000;
  --surface: #fcfcfd;
  --border: #d9dde3;
  --accent: #2563eb; /* blue-600 */
  --accent-hover: #60a5fa; /* blue-400 */
  --accent-active: #1e40af; /* blue-800 */
}

/* Dark theme overrides */
.dark {
  --background: #0d1117;
  --foreground: #d1d5db;
  --surface: #161b22;
  --border: #30363d;
  --accent: #60a5fa; /* blue-400 for accent in dark mode */
  --accent-hover: #2563eb; /* blue-600 for hover in dark mode */
  --accent-active: #1e40af; /* blue-800 for active in dark mode */
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
}

/* Ensure all text and background colors adapt to light and dark modes */
body {
  background: var(--background);
  color: var(--foreground);
}

/* Ensure global text color applies to all elements */
body, p, span, div, h1, h2, h3, h4, h5, h6 {
  color: var(--foreground) !important; /* Use !important to override other styles */
}

/* Update links to adapt to themes */
a {
  color: var(--accent);
}
a:hover {
  color: var(--accent-hover);
}
a:active {
  color: var(--accent-active);
}

/* Ensure buttons adapt to themes */
.btn-primary {
  background: var(--accent);
  color: var(--foreground);
}
.btn-primary:hover {
  background: var(--accent-hover);
}
.btn-primary:active {
  background: var(--accent-active);
}

/* Ensure inputs adapt to themes */
.input {
  background: var(--surface);
  border: 1px solid var(--border);
  color: var(--foreground);
  padding: 0.5rem 0.75rem;
  border-radius: 0.375rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  width: 100%;
  box-shadow: none;
}
.input:focus {
  outline: none;
  border-color: var(--accent);
  box-shadow: 0 0 0 3px var(--accent-hover);
}
/* Dark mode input focus ring (removed invalid @apply usage) */
.dark .input:focus {
  outline: none;
  border-color: var(--accent);
  box-shadow: 0 0 0 3px rgba(129,140,248,0.45);
}

/* Ensure news details div adapts to themes */
/* Lighter surface for news details in light mode, preserve dark mode variable usage */
.news-details { background: var(--surface); }
:root { --surface: #fcfcfd; }
.dark { --surface: #161b22; }

/* Backdrop blur for floating decorative elements */
.float-blur {
  backdrop-filter: blur(8px) saturate(160%);
  -webkit-backdrop-filter: blur(8px) saturate(160%);
  background: linear-gradient(
    140deg,
    rgba(99,102,241,0.10) 0%,
    rgba(99,102,241,0.25) 40%,
    rgba(139,92,246,0.15) 100%
  );
  border: 1px solid rgba(255,255,255,0.15);
  border-radius: 9999px;
  box-shadow: 0 4px 30px -5px rgba(0,0,0,0.25);
}

/* Optional smaller / larger blur variants */
.float-blur-sm { backdrop-filter: blur(4px) saturate(140%); -webkit-backdrop-filter: blur(4px) saturate(140%); }
.float-blur-lg { backdrop-filter: blur(14px) saturate(180%); -webkit-backdrop-filter: blur(14px) saturate(180%); }

/* Floating background animations (enhanced for subtle continuous motion) */
@keyframes floatA {
  /* gentler vertical motion with smooth easing points */
  0% { transform: translate3d(0,0,0) scale(1); }
  25% { transform: translate3d(4px,-10px,0) scale(1.008); }
  50% { transform: translate3d(-3px,-18px,0) scale(1.015); }
  75% { transform: translate3d(-1px,-9px,0) scale(1.006); }
  100% { transform: translate3d(0,0,0) scale(1); }
}
@keyframes floatB {
  0% { transform: translate3d(0,0,0) rotate(0deg) scale(1); }
  25% { transform: translate3d(-6px,-12px,0) rotate(2deg) scale(1.006); }
  50% { transform: translate3d(3px,-24px,0) rotate(5deg) scale(1.016); }
  75% { transform: translate3d(6px,-10px,0) rotate(2deg) scale(1.008); }
  100% { transform: translate3d(0,0,0) rotate(0deg) scale(1); }
}
@keyframes floatC {
  0% { transform: translate3d(0,0,0) scale(1); }
  50% { transform: translate3d(2px,-15px,0) scale(1.01); }
  100% { transform: translate3d(0,0,0) scale(1); }
}
/* Micro jitter / noise wobble layered animation for more organic feel (smaller amplitude, continuous) */
@keyframes floatNoise {
  0% { transform: translate3d(0,0,0); }
  20% { transform: translate3d(0.6px,-1px,0); }
  40% { transform: translate3d(-0.6px,1px,0); }
  60% { transform: translate3d(0.3px,0.5px,0); }
  80% { transform: translate3d(-0.3px,-0.5px,0); }
  100% { transform: translate3d(0,0,0); }
}

/* White emphasis utility for floats in dark mode */
.float-white { filter: brightness(1.15) contrast(1.1) saturate(1.05); }
.dark .float-white { filter: brightness(2.2) contrast(1.15) saturate(1.1); }

.animate-float-slow { will-change: transform; animation: floatA 14s cubic-bezier(.22,.9,.35,1) infinite, floatNoise 5.5s linear infinite; }
.animate-float-medium { will-change: transform; animation: floatB 11s cubic-bezier(.22,.9,.35,1) infinite, floatNoise 4.8s linear infinite; }
.animate-float-fast { will-change: transform; animation: floatC 9s cubic-bezier(.22,.9,.35,1) infinite, floatNoise 3.6s linear infinite; }

/* Reduced motion respect (override layered animations) */
@media (prefers-reduced-motion: reduce) {
  .animate-float-slow,
  .animate-float-medium,
  .animate-float-fast { animation: none !important; }
}

/* Also respect explicit runtime attribute set on documentElement by early script */
[data-prefers-reduced-motion="true"] .animate-float-slow,
[data-prefers-reduced-motion="true"] .animate-float-medium,
[data-prefers-reduced-motion="true"] .animate-float-fast {
  animation: none !important;
}

/* Allow explicit user opt-in to force animations even when reduce-motion is set */
[data-force-animate="true"] .animate-float-slow,
[data-force-animate="true"] .animate-float-medium,
[data-force-animate="true"] .animate-float-fast {
  /* Re-apply the original animations regardless of reduced-motion */
  animation: floatA 14s cubic-bezier(.22,.9,.35,1) infinite, floatNoise 5.5s linear infinite !important;
}
